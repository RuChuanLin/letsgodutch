{"version":3,"sources":["containers/DataTable.js","constants/userConst.js","firebase/init.js","firebase/configs.js","firebase/index.js","components/Modal.js","containers/Panel/AddUserModal.js","actions/userAction.js","constants/focusRecordConst.js","actions/focusRecordAction.js","constants/recordConst.js","containers/Panel/AddNewRecordModal.js","actions/recordAction.js","containers/Panel/index.js","App.js","reportWebVitals.js","reducers/focusRecordReducer.js","reducers/recordReducer.js","reducers/userReducer.js","store.js","index.js"],"names":["generateTotalCostAmount","events","reduce","acc","participants","payer","deliveryFee","delivery","fee","averageDeliveryFee","Object","keys","length","totalAmount","console","log","entries","forEach","name","cost","DataTable","records","useSelector","state","columns","totalCostAmount","title","dataIndex","key","map","participant","lowerCaseName","toLocaleLowerCase","render","children","generateColumns","dataSource","event","i","date","moment","format","scroll","y","USER__LOAD_ALL_USERS","USER__ADD_USER","firebase","initializeApp","apiKey","authDomain","projectId","firestore","getRecordDB","collection","getUserDB","CustomModal","buttonTitle","okFunction","useState","isModalVisible","setIsModalVisible","type","onClick","visible","onOk","onCancel","Option","Select","AddUserModal","users","userName","setUserName","dispatch","useDispatch","Modal","getState","nameObject","add","then","payload","addUser","Item","label","rules","message","required","value","onChange","e","target","style","width","FOCUS_RECORD__UPDATE_RECORD","updateFocusRecord","RECORDS__ADD_RECORD","RECORDS__LOAD_ALL_RECORD","onFinish","values","onFinishFailed","errorInfo","AddNewRecordModal","record","focusRecord","span","valueOf","hasFeedback","allowClear","placeholder","Panel","App","useEffect","force","orderBy","get","snapshots","allRecords","docs","snapshot","data","fetchAllRecords","allUsers","fetchAllUsers","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","reducer","action","loggerMiddleware","createLogger","store","createStore","combineReducers","applyMiddleware","thunkMiddleware","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.8e413797.chunk.js","sourcesContent":["import { Table } from \"antd\"; \nimport { useSelector } from \"react-redux\";\n \nimport moment from 'moment'\n\nconst generateColumns = (events) => {\n  const totalCostAmount = generateTotalCostAmount(events);\n  console.log(totalCostAmount);\n  const participants = Object.keys(totalCostAmount);\n  return [\n    {\n      title: \"日期\",\n      dataIndex: \"date\",\n      key: \"date\",\n    },\n    { title: \"付款人\", dataIndex: \"payer\", key: \"payer\" },\n    { title: \"運費\", dataIndex: \"deliveryFee\", key: \"deliveryFee\" },\n    ...participants.map((participant) => {\n      const lowerCaseName = participant.toLocaleLowerCase();\n      return {\n        title: participant,\n        render: (cost) => cost || 0,\n        children: [\n          {\n            title: totalCostAmount[participant],\n            dataIndex: lowerCaseName,\n            key: lowerCaseName,\n          },\n        ],\n      };\n    }),\n    { title: \"總額\", dataIndex: \"totalAmount\", key: \"totalAmount\" },\n  ];\n};\n\nconst generateDataSource = (events) => {\n  return events.map((event, i) => {\n    const { date, participants, payer, delivery } = event;\n    const deliveryFee = delivery.fee;\n    return {\n      key: `${i + 1}`,\n      date : moment(date).format('M / D'),\n      payer,\n      ...Object.entries(participants).reduce(\n        (acc, [name, cost]) => ({\n          ...acc,\n          ...{ [name.toLocaleLowerCase()]: cost },\n        }),\n        {}\n      ),\n      deliveryFee,\n      totalAmount: Object.entries(participants).reduce(\n        (acc, [_, cost]) => acc + cost,\n        deliveryFee\n      ),\n    };\n  });\n};\n\nconst generateTotalCostAmount = (events) =>\n  events.reduce((acc, { participants, payer, delivery }) => {\n    const deliveryFee = delivery.fee;\n    const averageDeliveryFee = deliveryFee / Object.keys(participants).length;\n    let totalAmount = deliveryFee;\n    console.log(participants);\n    Object.entries(participants).forEach(([name, cost]) => {\n      acc[name] = acc[name] || 0;\n      acc[name] -= cost + averageDeliveryFee;\n      totalAmount += cost;\n    });\n    acc[payer] += totalAmount;\n    return acc;\n  }, {});\n\nconst DataTable = () => {\n  \n  const records = useSelector((state) => state.records);\n  const columns = generateColumns(records);\n  const dataSource = generateDataSource(records);\n  return (\n    <>\n      <Table\n        dataSource={dataSource}\n        columns={columns}\n        scroll={{ y: 240 }}\n      ></Table>\n    </>\n  );\n};\nexport default DataTable;\n","export const USER__LOAD_ALL_USERS = \"USER__LOAD_ALL_USERS\";\nexport const USER__ADD_USER = \"USER__ADD_USER\";\n","import firebase from \"firebase\";\nimport \"firebase/database\";\nimport configs from \"./configs\";\n\nfirebase.initializeApp(configs);\n\nexport default firebase.firestore();\n","export default {\n  apiKey: \"AIzaSyC_syLiDTXmWb565I3eu65otaLVggyvHts\",\n  authDomain: \"bookkeeping-7d6e7.firebaseapp.com\",\n  projectId: \"bookkeeping-7d6e7\",\n};\n","import firebase from \"./init\";\n\nexport const getRecordDB = () => firebase.collection(\"records\");\nexport const getUserDB = () => firebase.collection(\"users\");\n","import React, { useState } from \"react\";\nimport { Modal, Button } from \"antd\";\n\nconst CustomModal = ({buttonTitle = 'Open Modal', title, okFunction, children}) => {\n  const [isModalVisible, setIsModalVisible] = useState(false);\n\n  const showModal = () => {\n    setIsModalVisible(true);\n  };\n\n  const handleOk = () => {\n    okFunction()\n    setIsModalVisible(false);\n  };\n\n  const handleCancel = () => {\n    setIsModalVisible(false);\n  };\n\n  return (\n    <>\n      <Button type=\"primary\" onClick={showModal}>\n        {buttonTitle}\n      </Button>\n      <Modal\n        title={title}\n        visible={isModalVisible}\n        onOk={handleOk}\n        onCancel={handleCancel}\n      >\n       {children}\n      </Modal>\n    </>\n  );\n};\n\nexport default CustomModal;\n","import { Form, Input, Select } from \"antd\";\nimport { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { addUser } from \"../../actions/userAction\";\nimport Modal from \"../../components/Modal\";\n\nconst { Option } = Select;\n\nconst AddUserModal = () => {\n  const users = useSelector((state) => state.users);\n  const [userName, setUserName] = useState(\"\");\n  const dispatch = useDispatch();\n  return (\n    <Modal\n      buttonTitle=\"新增使用者\"\n      title=\"新增使用者\"\n      okFunction={() => {\n        dispatch(addUser({ userName }));\n        setUserName(\"\");\n      }}\n    >\n      <Form>\n        <Form.Item\n          label=\"使用者名稱\"\n          rules={[\n            {\n              message: \"輸入使用者名稱\",\n              required: true,\n            },\n          ]}\n        >\n          <Input\n            type=\"text\"\n            value={userName}\n            onChange={(e) => setUserName(e.target.value)}\n          />\n        </Form.Item>\n        <Select style={{ width: 150 }}>\n          {users.map(({ name }) => (\n            <Option key={name}>{name}</Option>\n          ))}\n        </Select>\n      </Form>\n    </Modal>\n  );\n};\n\nexport default AddUserModal;\n","import { USER__LOAD_ALL_USERS, USER__ADD_USER } from \"../constants/userConst\";\nimport { getUserDB } from \"../firebase\";\n\nexport const fetchAllUsers =\n  ({ force } = {}) =>\n  (dispatch, getState) => {\n    const { users = [] } = getState();\n    if (users.length === 0 || force) {\n      getUserDB()\n        .get()\n        .then((snapshots) => {\n          const allUsers = snapshots.docs.map((snapshot) => snapshot.data());\n          dispatch({ type: USER__LOAD_ALL_USERS, payload: allUsers });\n        });\n    } else {\n      dispatch({ type: USER__LOAD_ALL_USERS, payload: users });\n    }\n  };\n\nexport const addUser =\n  ({ userName } = {}) =>\n  (dispatch, getState) => {\n    if (userName) {\n      const nameObject = { name: userName };\n      getUserDB()\n        .add(nameObject)\n        .then(() => {\n          dispatch({ type: USER__ADD_USER, payload: nameObject });\n        });\n    }\n  };\n","export const FOCUS_RECORD__UPDATE_RECORD = \"FOCUS_RECORD__UPDATE_RECORD\";\n","import { FOCUS_RECORD__UPDATE_RECORD } from \"../constants/focusRecordConst\";\n\nexport const updateFocusRecord = (payload) => {\n  return { type: FOCUS_RECORD__UPDATE_RECORD, payload };\n};\n","export const RECORDS__ADD_RECORD = 'RECORDS__ADD_RECORD'\nexport const RECORDS__LOAD_ALL_RECORD = 'RECORDS__LOAD_ALL_RECORD'\n","import { Form, Input, DatePicker, Select } from \"antd\";\nimport Modal from \"../../components/Modal\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { updateFocusRecord } from \"../../actions/focusRecordAction\";\nimport { addNewRecord } from \"../../actions/recordAction\";\n\nimport { getRecordDB } from \"../../firebase\";\n\nimport moment from \"moment\";\n\nconst { Option } = Select;\n\nconst onFinish = (values) => {\n  console.log(\"Success:\", values);\n};\n\nconst onFinishFailed = (errorInfo) => {\n  console.log(\"Failed:\", errorInfo);\n};\n\nconst AddNewRecordModal = () => {\n  const record = useSelector((state) => state.focusRecord);\n  const dispatch = useDispatch();\n  return (\n    <Modal\n      buttonTitle=\"新增一筆資料\"\n      title=\"新增一筆資料\"\n      okFunction={() => {\n        getRecordDB()\n          .add(record)\n          .then(() => dispatch(addNewRecord(record)));\n      }}\n    >\n      <Form\n        name=\"basic\"\n        name=\"basic\"\n        labelCol={{\n          span: 8,\n        }}\n        wrapperCol={{\n          span: 16,\n        }}\n        onFinish={onFinish}\n        onFinishFailed={onFinishFailed}\n      >\n        <Form.Item label=\"DatePicker\">\n          <DatePicker\n            value={moment(record?.date)}\n            onChange={(e) =>\n              dispatch(\n                updateFocusRecord({\n                  date: e ? e.valueOf() : moment().valueOf(),\n                })\n              )\n            }\n          />\n        </Form.Item>\n        <Form.Item\n          name=\"select\"\n          label=\"Select\"\n          hasFeedback\n          rules={[{ required: true, message: \"Please select your country!\" }]}\n        >\n          <Select\n            allowClear\n            style={{ width: \"100%\" }}\n            placeholder=\"Please select\"\n            onChange={(payer) => {\n              dispatch(updateFocusRecord({ payer }));\n            }}\n            value={record?.payer}\n          >\n            {[\"River\", \"Jill\", \"Tony\", \"Gary\"].map((name) => (\n              <Option key={name}>{name}</Option>\n            ))}\n          </Select>\n        </Form.Item>\n        {[\"River\", \"Jill\", \"Tony\", \"Gary\"].map((name) => (\n          <Form.Item\n            key={name}\n            label={name}\n            rules={[\n              {\n                message: \"輸入點餐金額！\",\n              },\n            ]}\n          >\n            <Input\n              type=\"number\"\n              value={record?.participants?.[name] || 0}\n              onChange={(e) => {\n                dispatch(\n                  updateFocusRecord({\n                    participants: {\n                      ...record.participants,\n                      [name]: +e.target.value,\n                    },\n                  })\n                );\n              }}\n              placeholder=\"點餐金額，不輸入代表沒點餐\"\n            />\n          </Form.Item>\n        ))}\n\n        <Form.Item\n          label=\"運費\"\n          rules={[\n            {\n              message: \"輸入運費\",\n            },\n          ]}\n        >\n          <Input\n            type=\"number\"\n            value={record?.delivery?.fee || 0}\n            onChange={(e) => {\n              dispatch(\n                updateFocusRecord({\n                  delivery: {\n                    fee: +e.target.value,\n                  },\n                })\n              );\n            }}\n            placeholder=\"點餐金額，不輸入代表沒點餐\"\n          />\n        </Form.Item>\n      </Form>\n    </Modal>\n  );\n};\n\nexport default AddNewRecordModal;\n","import {\n  RECORDS__ADD_RECORD,\n  RECORDS__LOAD_ALL_RECORD,\n} from \"../constants/recordConst\";\nimport { getRecordDB } from \"../firebase\";\n\nexport const fetchAllRecords =\n  ({ force } = {}) =>\n  (dispatch, getState) => {\n    const { records } = getState();\n    if (records.length === 0 || force) {\n      getRecordDB()\n        .orderBy(\"date\", \"desc\")\n        .get()\n        .then((snapshots) => {\n          const allRecords = snapshots.docs.map((snapshot) => snapshot.data());\n          console.log(allRecords);\n          dispatch({ type: RECORDS__LOAD_ALL_RECORD, payload: allRecords });\n        });\n    } else {\n      dispatch({ type: RECORDS__LOAD_ALL_RECORD, payload: records });\n    }\n  };\n\nexport const addNewRecord = (newRecord) => {\n  return { type: RECORDS__ADD_RECORD, payload: newRecord };\n};\n","import React from \"react\";\n\n\nimport AddUserModal from \"./AddUserModal\";\nimport AddNewRecordModal from './AddNewRecordModal'\n\nconst Panel = () => {\n  return (\n    <div>\n      <AddUserModal></AddUserModal>\n      <AddNewRecordModal></AddNewRecordModal>\n    </div>\n  );\n};\nexport default Panel;\n","import DataTable from \"./containers/DataTable\";\nimport Panel from \"./containers/Panel\";\n\nimport { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport { fetchAllRecords } from \"./actions/recordAction\";\nimport { fetchAllUsers } from \"./actions/userAction\";\n\nconst App = () => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchAllRecords());\n    dispatch(fetchAllUsers());\n  });\n\n  return (\n    <>\n      <Panel></Panel>\n      <DataTable></DataTable>\n    </>\n  );\n};\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import moment from \"moment\";\nimport { FOCUS_RECORD__UPDATE_RECORD } from \"../constants/focusRecordConst\";\n\nconst initialState = {\n  date: moment().valueOf(),\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FOCUS_RECORD__UPDATE_RECORD:\n      return { ...state, ...action.payload };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import {\n  RECORDS__ADD_RECORD,\n  RECORDS__LOAD_ALL_RECORD,\n} from \"../constants/recordConst\";\nconst initialState = [];\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case RECORDS__ADD_RECORD:\n      return [action.payload, ...state];\n    case RECORDS__LOAD_ALL_RECORD:\n      return [...action.payload];\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import { USER__LOAD_ALL_USERS, USER__ADD_USER } from \"../constants/userConst\";\nconst initialState = [];\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case USER__LOAD_ALL_USERS:\n      return [...action.payload];\n    case USER__ADD_USER:\n      return [...state, action.payload];\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import { createStore, applyMiddleware } from \"redux\";\nimport focusRecord from \"./reducers/focusRecordReducer\";\nimport records from \"./reducers/recordReducer\";\nimport users from \"./reducers/userReducer\";\n\nimport thunkMiddleware from \"redux-thunk\";\nimport { combineReducers } from \"redux\";\nimport { createLogger } from \"redux-logger\";\n\nconst loggerMiddleware = createLogger();\n\nconst store = createStore(\n  combineReducers({\n    focusRecord,\n    records,\n    users,\n  }),\n  applyMiddleware(thunkMiddleware, loggerMiddleware)\n);\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport \"antd/dist/antd.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}